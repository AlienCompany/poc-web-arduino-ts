"use strict";
exports.__esModule = true;
var express = require("express");
var http_1 = require("http");
var io = require("socket.io");
var SerialPort = require("serialport");
var myLog_1 = require("./myLog");
var Readline = SerialPort.parsers.Readline;
var app = express();
var server = new http_1.Server(app);
var ioServer = io(server);
var port = 8888;
var arduinoCom = 'COM6';
var usbPort = new SerialPort(arduinoCom);
var parser = usbPort.pipe(new Readline({ delimiter: '\n' }));
function sendToArduino(data) {
    myLog_1.myLog('OUT Serial', 'A <- ' + data);
    usbPort.write(data);
}
function receiveArduinoLine(line) {
    myLog_1.myLog('IN Serial', 'A -> ' + line);
}
function onClientConnection(client) {
    myLog_1.myLog('+ New socket!');
    client.on('customSrvEvent1', function (data) { return console.log('customSrvEvent1', data); });
    client.on('customSrvEvent2', function (data) { return console.log('customSrvEvent2', data); });
    client.on('customSrvEvent3', function (data) {
        console.log('customSrvEvent3 from ' + data.prenom + ' ' + data.nom);
        console.log('Autre Prenom');
        for (var i = 0; i < data.autrePrenom.length; i++) {
            console.log('\t- ' + data.autrePrenom[i]);
        }
        console.log('all data:', data);
    });
    client.on('disconnect', function () {
        myLog_1.myLog('- Socket disconnected!');
    });
    client.emit('customCliEvent1', 'test');
    client.emit('customCliEvent2', { myNum: 543210, myStr: 'abcde' });
}
function init() {
    server.listen(port, function () { return myLog_1.myLog('+ Server listen on port: ' + port); });
    app.use(express.static(__dirname + '/public')); //requête sur le site redirigé vers le dossier public
    ioServer.on('connection', function (socket) { return onClientConnection(socket); });
    parser.on('data', function (line) { return receiveArduinoLine(line); });
}
init();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFtQztBQUVuQyw2QkFBOEI7QUFDOUIsOEJBQWdDO0FBRWhDLHVDQUF5QztBQUN6QyxpQ0FBZ0M7QUFFaEMsSUFBTyxRQUFRLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFFOUMsSUFBTSxHQUFHLEdBQVksT0FBTyxFQUFFLENBQUM7QUFDL0IsSUFBTSxNQUFNLEdBQVcsSUFBSSxhQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdkMsSUFBTSxRQUFRLEdBQWEsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3RDLElBQU0sSUFBSSxHQUFXLElBQUksQ0FBQztBQUMxQixJQUFNLFVBQVUsR0FBVyxNQUFNLENBQUM7QUFDbEMsSUFBTSxPQUFPLEdBQWUsSUFBSSxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDdkQsSUFBTSxNQUFNLEdBQWEsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLFFBQVEsQ0FBQyxFQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQUM7QUFVdkUsU0FBUyxhQUFhLENBQUMsSUFBWTtJQUNsQyxhQUFLLENBQUMsWUFBWSxFQUFFLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQztJQUNwQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3JCLENBQUM7QUFFRCxTQUFTLGtCQUFrQixDQUFDLElBQVk7SUFDdkMsYUFBSyxDQUFDLFdBQVcsRUFBRSxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQztBQUVELFNBQVMsa0JBQWtCLENBQUMsTUFBYztJQUN6QyxhQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFdkIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxVQUFDLElBQVksSUFBSyxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLEVBQXBDLENBQW9DLENBQUMsQ0FBQztJQUNyRixNQUFNLENBQUMsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFVBQUMsSUFBb0MsSUFBSyxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLEVBQXBDLENBQW9DLENBQUMsQ0FBQztJQUM3RyxNQUFNLENBQUMsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFVBQUMsSUFBZTtRQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwRSxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzVCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBQztZQUNoRCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDMUM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFO1FBQ3ZCLGFBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBRUgsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QyxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBR0QsU0FBUyxJQUFJO0lBQ1osTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsY0FBTSxPQUFBLGFBQUssQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUMsRUFBekMsQ0FBeUMsQ0FBQyxDQUFDO0lBQ3JFLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLHFEQUFxRDtJQUNyRyxRQUFRLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLE1BQWMsSUFBSyxPQUFBLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxFQUExQixDQUEwQixDQUFDLENBQUM7SUFDMUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsVUFBQyxJQUFZLElBQUssT0FBQSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBeEIsQ0FBd0IsQ0FBQyxDQUFDO0FBQy9ELENBQUM7QUFFRCxJQUFJLEVBQUUsQ0FBQyJ9